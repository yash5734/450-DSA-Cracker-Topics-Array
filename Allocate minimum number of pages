class Solution 
{
    public:
    
    bool isPossible(int a[],int n,int m, int mid){
        
        int sumPage = 0;
        int student = 1;
        int start = 0;
        int end = mid;
        
        for(int i=0;i<n;i++){
            
            if(a[i]+sumPage <= mid){
                sumPage += a[i];
            }
            
            else{
                
                student++;
                if(student>m || a[i]>mid){
                    return false;
                }
                
                sumPage = a[i];
                
            }
            
            
        }
        
        if(student>m) return false;
        
        return true;
        
    }
    
    //Function to find minimum number of pages.
    int findPages(int a[], int n, int m) 
    {
        // base case 
        
        if(n<m) return -1;
        
        int sum = 0;
        
        for(int i=0;i<n;i++){
            sum+=a[i];
        }
        
        int ans = -1;
        int start = 0;
        int end = sum;
        int mid = start +(end-start)/2;
        
        while(start<=end){
            
            if(isPossible(a,n,m,mid)){
                
                ans = mid;
                end = mid - 1;
                
            }
            else{
                
                start = mid + 1;
                
            }
            
            mid = start +(end-start)/2;
            
        }
        
        return ans;
    }
};

