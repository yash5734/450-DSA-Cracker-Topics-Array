class Solution {
public:
    bool searchMatrix(vector<vector<int>>& mat, int X) {
        bool DTD = false;
        int N=mat.size();
        int M=mat[0].size();
	   for(int i=0;i<N;++i){
	       for(int j=0;j<M;++j){
	           if(mat[i][j]==X){
	               DTD=true;
	           }
	       }
	   }
	   return DTD;
    }
};



// --------------- using binary search---------------


class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
        int row = matrix.size();
        int col = matrix[0].size();
        int start = 0;
        int end = (row*col) -1;
        int mid = (start+end)/2;

        while(start<=end){

            if(matrix[mid/col][mid%col]==target) return true;

            if(matrix[mid/col][mid%col]<target)
                start = mid+1;
            else 
                end = mid-1;

            mid = (start+end)/2;
        }
        return false;
    }
};
